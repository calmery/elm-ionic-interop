{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/index-69c37885.js"],"names":["CSS_VALUE_REGEX","TRANSFORM_PROPS","win","window","raf","requestAnimationFrame","bind","f","Date","now","Animator","prototype","addElement","el","length","i","this","_addEl","nodeType","_elements","push","add","childAnimation","parent","hasChildren","_childAnimations","getDuration","opts","undefined","duration","_duration","isRoot","milliseconds","getEasing","_isReverse","_reversedEasingName","_easingName","easing","name","easingReverse","from","prop","val","_addProp","to","clearProperyAfterTransition","fx","afterClearStyles","trans","fromTo","fromVal","toVal","_getProp","_fxProperties","find","effectName","state","fxProp","shouldTrans","wc","fxState","num","effectUnit","indexOf","r","match","parseFloat","isNaN","beforeAddClass","className","_beforeAddClasses","beforeRemoveClass","_beforeRemoveClasses","beforeStyles","styles","_beforeStyles","beforeClearStyles","propertyNames","_i","propertyNames_1","beforeAddRead","domReadFn","_readCallbacks","beforeAddWrite","domWriteFn","_writeCallbacks","afterAddClass","_afterAddClasses","afterRemoveClass","_afterRemoveClasses","afterStyles","_afterStyles","propertyNames_2","play","_this","_destroyed","_isAsync","_hasDuration","_clearAsync","_playInit","_playDomInspect","playAsync","Promise","resolve","onFinish","oneTimeCallback","clearExistingCallbacks","playSync","_hasTweenEffect","isPlaying","hasCompleted","_hasDur","children","children_1","_progress","_willChange","_beforeAnimation","dur","_asyncEnd","_playProgress","_playToStep","children_2","_setTrans","_setAfterStyles","_didFinish","stepValue","children_3","shouldComplete","unRegTrans","self","unregister","onTransitionEnd","ev","target","_playEnd","_didFinishAll","_unregisterTrnsEnd","_transEl","passive","addEventListener","removeEventListener","_timerId","setTimeout","children_4","children_5","_hasDomReads","children_6","stop","clearTimeout","elements","effects","j","finalTransform","fromNum","toNum","tweenEffect","style","setProperty","forcedLinearEasing","durString","elements_1","transitionDuration","transitionTimingFunction","_fireBeforeReadFunc","_fireBeforeWriteFunc","_setBeforeStyles","children_7","addClasses","removeClasses","_a","elements_2","elementClassList","classList","_b","addClasses_1","_c","removeClasses_1","remove","_d","_e","Object","entries","_f","children_8","readFunctions","readFunctions_1","callback","children_9","writeFunctions","writeFunctions_1","elements_3","beforeAddClasses","beforeAddClasses_1","beforeRemoveClasses","beforeRemoveClasses_1","keys","removeProperty","afterAddClasses","afterAddClasses_1","afterRemoveClasses","afterRemoveClasses_1","_g","_h","_j","addWillChange","willChange","effects_1","propWC","join","elements_4","progressStart","_progressStart","children_10","progressStep","Math","min","max","children_11","progressEnd","currentStepValue","abs","_progressEnd","isAsync","children_12","_onFinishCallbacks","_onFinishOneTimeCallbacks","finishAsyncAnimations","finishNoDurationAnimations","children_13","reverse","shouldReverse","children_14","destroy","children_15","children_16","targetEl","create","animationBuilder","baseEl"],"mappings":"yFAAA,gDAwBIA,EAAkB,qBAGlBC,EAAkB,CAClB,WAAc,EACd,WAAc,EACd,WAAc,EACd,MAAS,EACT,OAAU,EACV,OAAU,EACV,OAAU,EACV,OAAU,EACV,QAAW,EACX,QAAW,EACX,QAAW,EACX,MAAS,EACT,MAAS,EACT,YAAe,GAEfC,EAAwB,oBAAXC,OAAyBA,OAAS,GAC/CC,EAAMF,EAAIG,sBACRH,EAAIG,sBAAsBC,KAAKJ,GAC/B,SAAUK,GAAK,OAAOA,EAAEC,KAAKC,QAC/BC,GAWAA,EAASC,UAAUC,WAAa,SAAUC,GACtC,GAAU,MAANA,EACA,GAAgB,EAAZA,EAAGC,OACH,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAGC,OAAQC,IAC3BC,KAAKC,OAAOJ,EAAGE,SAInBC,KAAKC,OAAOJ,GAGpB,OAAOG,MAKXN,EAASC,UAAUM,OAAS,SAAUJ,GACd,IAAhBA,EAAGK,WACFF,KAAKG,UAAYH,KAAKG,WAAa,IAAIC,KAAKP,IAMrDH,EAASC,UAAUU,IAAM,SAAUC,GAI/B,OAHAA,EAAeC,OAASP,MACnBQ,aAAc,GAClBR,KAAKS,iBAAmBT,KAAKS,kBAAoB,IAAIL,KAAKE,GACpDN,MAMXN,EAASC,UAAUe,YAAc,SAAUC,GACvC,OAAIA,QAA0BC,IAAlBD,EAAKE,SACNF,EAAKE,cAEYD,IAAnBZ,KAAKc,UACHd,KAAKc,UAEPd,KAAKO,OACHP,KAAKO,OAAOG,cAEhB,GAKXhB,EAASC,UAAUoB,OAAS,WACxB,OAAQf,KAAKO,QAKjBb,EAASC,UAAUkB,SAAW,SAAUG,GAEpC,OADAhB,KAAKc,UAAYE,EACVhB,MAMXN,EAASC,UAAUsB,UAAY,WAC3B,OAAIjB,KAAKkB,iBAA2CN,IAA7BZ,KAAKmB,oBACjBnB,KAAKmB,yBAEYP,IAArBZ,KAAKoB,YAA4BpB,KAAKoB,YAAepB,KAAKO,QAAUP,KAAKO,OAAOU,aAAgB,MAK3GvB,EAASC,UAAU0B,OAAS,SAAUC,GAElC,OADAtB,KAAKoB,YAAcE,EACZtB,MAKXN,EAASC,UAAU4B,cAAgB,SAAUD,GAEzC,OADAtB,KAAKmB,oBAAsBG,EACpBtB,MAKXN,EAASC,UAAU6B,KAAO,SAAUC,EAAMC,GAEtC,OADA1B,KAAK2B,SAAS,OAAQF,EAAMC,GACrB1B,MAKXN,EAASC,UAAUiC,GAAK,SAAUH,EAAMC,EAAKG,QACL,IAAhCA,IAA0CA,GAA8B,GAC5E,IAAIC,EAAK9B,KAAK2B,SAAS,KAAMF,EAAMC,GAMnC,OALIG,GAGA7B,KAAK+B,iBAAiBD,EAAGE,MAAQ,CAAC,YAAa,qBAAuB,CAACP,IAEpEzB,MAKXN,EAASC,UAAUsC,OAAS,SAAUR,EAAMS,EAASC,EAAON,GACxD,OAAO7B,KAAKwB,KAAKC,EAAMS,GAASN,GAAGH,EAAMU,EAAON,IAKpDnC,EAASC,UAAUyC,SAAW,SAAUd,GACpC,GAAItB,KAAKqC,cACL,OAAOrC,KAAKqC,cAAcC,KAAK,SAAUb,GAAQ,OAAOA,EAAKc,aAAejB,KAIpF5B,EAASC,UAAUgC,SAAW,SAAUa,EAAOf,EAAMC,GACjD,IAAIe,EAASzC,KAAKoC,SAASX,GAC3B,IAAKgB,EAAQ,CAET,IAAIC,EAAyC,IAA1BzD,EAAgBwC,GACnCgB,EAAS,CACLF,WAAYd,EACZO,MAAOU,EAEPC,GAAKD,EAAc,YAAcjB,IAEpCzB,KAAKqC,cAAgBrC,KAAKqC,eAAiB,IAAIjC,KAAKqC,GAGzD,IAAIG,EAAU,CACVlB,IAAKA,EACLmB,IAAK,EACLC,WAAY,IAGhB,GADAL,EAAOD,GAASI,EACG,iBAARlB,IAAoBA,EAAIqB,QAAQ,KAUnB,iBAARrB,IACZkB,EAAQC,IAAMnB,OAXmC,CACjD,IAAIsB,EAAItB,EAAIuB,MAAMjE,GAClB,GAAIgE,EAAG,CACH,IAAIH,EAAMK,WAAWF,EAAE,IAClBG,MAAMN,KACPD,EAAQC,IAAMA,GAElBD,EAAQE,WAAcE,EAAE,KAAOA,EAAE,GAAKA,EAAE,GAAK,IAMrD,OAAOP,GAMX/C,EAASC,UAAUyD,eAAiB,SAAUC,GAE1C,OADCrD,KAAKsD,kBAAoBtD,KAAKsD,mBAAqB,IAAIlD,KAAKiD,GACtDrD,MAMXN,EAASC,UAAU4D,kBAAoB,SAAUF,GAE7C,OADCrD,KAAKwD,qBAAuBxD,KAAKwD,sBAAwB,IAAIpD,KAAKiD,GAC5DrD,MAMXN,EAASC,UAAU8D,aAAe,SAAUC,GAExC,OADA1D,KAAK2D,cAAgBD,EACd1D,MAMXN,EAASC,UAAUiE,kBAAoB,SAAUC,GAC7C7D,KAAK2D,cAAgB3D,KAAK2D,eAAiB,GAC3C,IAAK,IAAIG,EAAK,EAAGC,EAAkBF,EAAeC,EAAKC,EAAgBjE,OAAQgE,IAE3E9D,KAAK2D,cADMI,EAAgBD,IACA,GAE/B,OAAO9D,MAMXN,EAASC,UAAUqE,cAAgB,SAAUC,GAEzC,OADCjE,KAAKkE,eAAiBlE,KAAKkE,gBAAkB,IAAI9D,KAAK6D,GAChDjE,MAMXN,EAASC,UAAUwE,eAAiB,SAAUC,GAE1C,OADCpE,KAAKqE,gBAAkBrE,KAAKqE,iBAAmB,IAAIjE,KAAKgE,GAClDpE,MAMXN,EAASC,UAAU2E,cAAgB,SAAUjB,GAEzC,OADCrD,KAAKuE,iBAAmBvE,KAAKuE,kBAAoB,IAAInE,KAAKiD,GACpDrD,MAMXN,EAASC,UAAU6E,iBAAmB,SAAUnB,GAE5C,OADCrD,KAAKyE,oBAAsBzE,KAAKyE,qBAAuB,IAAIrE,KAAKiD,GAC1DrD,MAMXN,EAASC,UAAU+E,YAAc,SAAUhB,GAEvC,OADA1D,KAAK2E,aAAejB,EACb1D,MAMXN,EAASC,UAAUoC,iBAAmB,SAAU8B,GAC5C7D,KAAK2E,aAAe3E,KAAK2E,cAAgB,GACzC,IAAK,IAAIb,EAAK,EAAGc,EAAkBf,EAAeC,EAAKc,EAAgB9E,OAAQgE,IAE3E9D,KAAK2E,aADMC,EAAgBd,IACD,GAE9B,OAAO9D,MAKXN,EAASC,UAAUkF,KAAO,SAAUlE,GAChC,IAAImE,EAAQ9E,KAERA,KAAK+E,aAST/E,KAAKgF,SAAWhF,KAAKiF,aAAatE,GAElCX,KAAKkF,cAGLlF,KAAKmF,UAAUxE,GAKfvB,EAAI,WACAA,EAAI,WACA0F,EAAMM,gBAAgBzE,SAIlCjB,EAASC,UAAU0F,UAAY,SAAU1E,GACrC,IAAImE,EAAQ9E,KACZ,OAAO,IAAIsF,QAAQ,SAAUC,GAGzB,OAFAT,EAAMU,SAASD,EAAS,CAAEE,iBAAiB,EAAMC,wBAAwB,IACzEZ,EAAMD,KAAKlE,GACJmE,KAGfpF,EAASC,UAAUgG,SAAW,WAE1B,IAAK3F,KAAK+E,WAAY,CAClB,IAAIpE,EAAO,CAAEE,SAAU,GACvBb,KAAKgF,UAAW,EAChBhF,KAAKkF,cACLlF,KAAKmF,UAAUxE,GACfX,KAAKoF,gBAAgBzE,KAO7BjB,EAASC,UAAUwF,UAAY,SAAUxE,GAKrCX,KAAK4F,iBAAkB,EACvB5F,KAAK6F,WAAY,EACjB7F,KAAK8F,cAAe,EACpB9F,KAAK+F,QA/UM,GA+UK/F,KAAKU,YAAYC,GACjC,IAAIqF,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGmC,EAAaD,EAAUlC,EAAKmC,EAAWnG,OAAQgE,IAChDmC,EAAWnC,GAEjBqB,UAAUxE,GAGpBX,KAAK+F,UAGL/F,KAAKkG,UAAU,GAGflG,KAAKmG,aAAY,KAQzBzG,EAASC,UAAUyF,gBAAkB,SAAUzE,GAC3C,IAAImE,EAAQ9E,KAMZA,KAAKoG,mBAIL,IAAIC,EAAMrG,KAAKU,YAAYC,GACvBX,KAAKgF,UACLhF,KAAKsG,UAAUD,GAAK,GAGxBrG,KAAKuG,cAAc5F,GACfX,KAAKgF,WAAahF,KAAK+E,YAGvB3F,EAAI,WACA0F,EAAM0B,YAAY,MAQ9B9G,EAASC,UAAU4G,cAAgB,SAAU5F,GACzC,IAAIqF,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAG2C,EAAaT,EAAUlC,EAAK2C,EAAW3G,OAAQgE,IAChD2C,EAAW3C,GAEjByC,cAAc5F,GAGxBX,KAAK+F,QAGL/F,KAAK0G,UAAU1G,KAAKU,YAAYC,IAAO,IAMvCX,KAAKkG,UAAU,GAGflG,KAAK2G,kBAGL3G,KAAK4G,YAAW,KAOxBlH,EAASC,UAAU6G,YAAc,SAAUK,GACvC,IAAK7G,KAAK+E,WAAY,CAClB,IAAIiB,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGgD,EAAad,EAAUlC,EAAKgD,EAAWhH,OAAQgE,IAChDgD,EAAWhD,GAEjB0C,YAAYK,GAGtB7G,KAAK+F,SAKL/F,KAAKkG,UAAUW,KAS3BnH,EAASC,UAAU2G,UAAY,SAAUD,EAAKU,GAC1C,IApdsBlH,EACtBmH,EACArG,EAkdIsG,EAAOjH,KAjdE,SAAbkH,IACIF,GACAA,IAGc,SAAlBG,EAA4BC,GACxBvH,IAAOuH,EAAGC,SACVH,IA8cAD,EAAK/B,cAEL+B,EAAKK,WAELL,EAAKM,cAAcR,GAAgB,GAAM,IAgB7CE,EAAKO,oBA5eiB3H,EA4ekBoH,EAAKQ,WA1e7C9G,EAAO,CAAE+G,SAAS,GAYlB7H,IACAA,EAAG8H,iBAAiB,sBAAuBR,EAAiBxG,GAC5Dd,EAAG8H,iBAAiB,gBAAiBR,EAAiBxG,GACtDqG,EAAa,WACTnH,EAAG+H,oBAAoB,sBAAuBT,EAAiBxG,GAC/Dd,EAAG+H,oBAAoB,gBAAiBT,EAAiBxG,KAG1DuG,GAydHD,EAAKY,SAAWC,WAjBW,WAKvBb,EAAKY,cAAWjH,EAChBqG,EAAK/B,cAGL+B,EAAKK,SAASP,EAAiB,EAAI,GAEnCE,EAAKM,cAAcR,GAAgB,GAAM,IAMKV,EArdjB,MA2drC3G,EAASC,UAAU2H,SAAW,SAAUT,GACpC,IAAIb,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGiE,EAAa/B,EAAUlC,EAAKiE,EAAWjI,OAAQgE,IAChDiE,EAAWjE,GAEjBwD,SAAST,GAGnB7G,KAAK+F,eACanF,IAAdiG,IAGA7G,KAAK0G,UAAU,GAAG,GAGlB1G,KAAKkG,UAAUW,IAInB7G,KAAK2G,kBAGL3G,KAAKmG,aAAY,KAOzBzG,EAASC,UAAUsF,aAAe,SAAUtE,GACxC,GA3fW,GA2fPX,KAAKU,YAAYC,GACjB,OAAO,EAEX,IAAIqF,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGkE,EAAahC,EAAUlC,EAAKkE,EAAWlI,OAAQgE,IAE5D,GADYkE,EAAWlE,GACbmB,aAAatE,GACnB,OAAO,EAInB,OAAO,GAMXjB,EAASC,UAAUsI,aAAe,WAC9B,GAAIjI,KAAKkE,gBAA+C,EAA7BlE,KAAKkE,eAAepE,OAC3C,OAAO,EAEX,IAAIkG,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGoE,EAAalC,EAAUlC,EAAKoE,EAAWpI,OAAQgE,IAE5D,GADYoE,EAAWpE,GACbmE,eACN,OAAO,EAInB,OAAO,GAKXvI,EAASC,UAAUwI,KAAO,SAAUtB,QACd,IAAdA,IAAwBA,EAAY,GAExC7G,KAAKkF,cACLlF,KAAK+F,SAAU,EACf/F,KAAKsH,SAAST,IAMlBnH,EAASC,UAAUuF,YAAc,WACzBlF,KAAKwH,oBACLxH,KAAKwH,qBAELxH,KAAK6H,UACLO,aAAapI,KAAK6H,UAEtB7H,KAAK6H,SAAW7H,KAAKwH,wBAAqB5G,GAM9ClB,EAASC,UAAUuG,UAAY,SAAUW,GAErC,IAAInF,EACA2G,EAAWrI,KAAKG,UAChBmI,EAAUtI,KAAKqC,cACnB,GAAKgG,GAAgC,IAApBA,EAASvI,QAAiBwI,IAAWtI,KAAK+E,WAA3D,CAII/E,KAAKkB,aACL2F,EAAY,EAAIA,GAEpB,IAGI/E,EAHA/B,EAAI,EACJwI,EAAI,EACJC,EAAiB,GAErB,IAAKzI,EAAI,EAAGA,EAAIuI,EAAQxI,OAAQC,IAE5B,IADA+B,EAAKwG,EAAQvI,IACNyB,MAAQM,EAAGF,GAAI,CAClB,IAAI6G,EAAU3G,EAAGN,KAAKqB,IAClB6F,EAAQ5G,EAAGF,GAAGiB,IACd8F,EAAeF,IAAYC,EAkB/B,GAjBIC,IACA3I,KAAK4F,iBAAkB,GAET,IAAdiB,EAEAnF,EAAMI,EAAGN,KAAKE,IAEK,IAAdmF,EAELnF,EAAMI,EAAGF,GAAGF,IAEPiH,IAILjH,GAFgBgH,EAAQD,GAAW5B,EAAa4B,EACrC3G,EAAGF,GAAGkB,YAGT,OAARpB,EAAc,CACd,IAAID,EAAOK,EAAGS,WACd,GAAIT,EAAGE,MACHwG,GAAkB/G,EAAO,IAAMC,EAAM,UAGrC,IAAK6G,EAAI,EAAGA,EAAIF,EAASvI,OAAQyI,IAE7BF,EAASE,GAAGK,MAAMC,YAAYpH,EAAMC,IAOxD,GAA4B,EAAxB8G,EAAe1I,OAIf,MAHKE,KAAKkB,YAA4B,IAAd2F,GAAmB7G,KAAKkB,YAA4B,IAAd2F,KAC1D2B,GAAkB,mBAEjBzI,EAAI,EAAGA,EAAIsI,EAASvI,OAAQC,IAE7BsI,EAAStI,GAAG6I,MAAMC,YAAY,YAAaL,GAC3CH,EAAStI,GAAG6I,MAAMC,YAAY,oBAAqBL,KAQ/D9I,EAASC,UAAU+G,UAAY,SAAUL,EAAKyC,GAE1C,IAAIT,EAAWrI,KAAKG,UACpB,GAAKkI,GAAgC,IAApBA,EAASvI,QAAiBE,KAAKqC,cAMhD,IAFA,IAAIhB,EAAUyH,EAAqB,SAAW9I,KAAKiB,YAC/C8H,EAAY1C,EAAM,KACbvC,EAAK,EAAGkF,EAAaX,EAAUvE,EAAKkF,EAAWlJ,OAAQgE,IAAM,CAClE,IAAI8E,EAAQI,EAAWlF,GAAI8E,MACjB,EAANvC,GAEAuC,EAAMK,mBAAqBF,EAEZ,OAAX1H,IAEAuH,EAAMM,yBAA2B7H,IAIrCuH,EAAMK,mBAAqB,MASvCvJ,EAASC,UAAUyG,iBAAmB,WAKlCpG,KAAKmJ,sBAILnJ,KAAKoJ,uBAGLpJ,KAAKqJ,oBAMT3J,EAASC,UAAU0J,iBAAmB,WAClC,IAAIrD,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGwF,EAAatD,EAAUlC,EAAKwF,EAAWxJ,OAAQgE,IAChDwF,EAAWxF,GACjBuF,mBAGd,IAAIhB,EAAWrI,KAAKG,UAGpB,GAAKkI,GAAgC,IAApBA,EAASvI,SAAgBE,KAAKkB,WAK/C,IAFA,IAAIqI,EAAavJ,KAAKsD,kBAClBkG,EAAgBxJ,KAAKwD,qBAChBiG,EAAK,EAAGC,EAAarB,EAAUoB,EAAKC,EAAW5J,OAAQ2J,IAAM,CAClE,IAAI5J,EAAK6J,EAAWD,GAChBE,EAAmB9J,EAAG+J,UAE1B,GAAIL,EACA,IAAK,IAAIM,EAAK,EAAGC,EAAeP,EAAYM,EAAKC,EAAahK,OAAQ+J,IAGlEF,EAAiBtJ,IAFTyJ,EAAaD,IAM7B,GAAIL,EACA,IAAK,IAAIO,EAAK,EAAGC,EAAkBR,EAAeO,EAAKC,EAAgBlK,OAAQiK,IAG3EJ,EAAiBM,OAFTD,EAAgBD,IAMhC,GAAI/J,KAAK2D,cACL,IAAK,IAAIuG,EAAK,EAAGC,EAAKC,OAAOC,QAAQrK,KAAK2D,eAAgBuG,EAAKC,EAAGrK,OAAQoK,IAAM,CAC5E,IAAII,EAAKH,EAAGD,GAEZrK,EAAG+I,MAAMC,YAFcyB,EAAG,GAAYA,EAAG,OAWzD5K,EAASC,UAAUwJ,oBAAsB,WACrC,IAAInD,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGyG,EAAavE,EAAUlC,EAAKyG,EAAWzK,OAAQgE,IAChDyG,EAAWzG,GAEjBqF,sBAGd,IAAIqB,EAAgBxK,KAAKkE,eACzB,GAAIsG,EACA,IAAK,IAAIf,EAAK,EAAGgB,EAAkBD,EAAef,EAAKgB,EAAgB3K,OAAQ2J,KAG3EiB,EAFeD,EAAgBhB,OAU3C/J,EAASC,UAAUyJ,qBAAuB,WACtC,IAAIpD,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAG6G,EAAa3E,EAAUlC,EAAK6G,EAAW7K,OAAQgE,IAChD6G,EAAW7G,GAEjBsF,uBAGd,IAAIwB,EAAiB5K,KAAKqE,gBAC1B,GAAIuG,EACA,IAAK,IAAInB,EAAK,EAAGoB,EAAmBD,EAAgBnB,EAAKoB,EAAiB/K,OAAQ2J,KAG9EiB,EAFeG,EAAiBpB,OAS5C/J,EAASC,UAAUgH,gBAAkB,WACjC,IAAI0B,EAAWrI,KAAKG,UACpB,GAAKkI,EAGL,IAAK,IAAIvE,EAAK,EAAGgH,EAAazC,EAAUvE,EAAKgH,EAAWhL,OAAQgE,IAAM,CAClE,IAAIjE,EAAKiL,EAAWhH,GAChB6F,EAAmB9J,EAAG+J,UAI1B,GADA/J,EAAG+I,MAAMK,mBAAqBpJ,EAAG+I,MAAMM,yBAA2B,GAC9DlJ,KAAKkB,WAAY,CAGjB,IAAI6J,EAAmB/K,KAAKsD,kBAC5B,GAAIyH,EACA,IAAK,IAAItB,EAAK,EAAGuB,EAAqBD,EAAkBtB,EAAKuB,EAAmBlL,OAAQ2J,IAEpFE,EAAiBM,OADTe,EAAmBvB,IAKnC,IAAIwB,EAAsBjL,KAAKwD,qBAC/B,GAAIyH,EACA,IAAK,IAAIpB,EAAK,EAAGqB,EAAwBD,EAAqBpB,EAAKqB,EAAsBpL,OAAQ+J,IAE7FF,EAAiBtJ,IADT6K,EAAsBrB,IAKtC,IAAIpG,EAAezD,KAAK2D,cACxB,GAAIF,EACA,IAAK,IAAIsG,EAAK,EAAGG,EAAKE,OAAOe,KAAK1H,GAAesG,EAAKG,EAAGpK,OAAQiK,IAG7DlK,EAAG+I,MAAMwC,eAFMlB,EAAGH,QAMzB,CAGD,IAAIsB,EAAkBrL,KAAKuE,iBAC3B,GAAI8G,EACA,IAAK,IAAIlB,EAAK,EAAGmB,EAAoBD,EAAiBlB,EAAKmB,EAAkBxL,OAAQqK,IAGjFR,EAAiBtJ,IAFTiL,EAAkBnB,IAMlC,IAAIoB,EAAqBvL,KAAKyE,oBAC9B,GAAI8G,EACA,IAAK,IAAIjB,EAAK,EAAGkB,EAAuBD,EAAoBjB,EAAKkB,EAAqB1L,OAAQwK,IAG1FX,EAAiBM,OAFTuB,EAAqBlB,IAMrC,IAAI5F,EAAc1E,KAAK2E,aACvB,GAAID,EACA,IAAK,IAAI+G,EAAK,EAAGC,EAAKtB,OAAOC,QAAQ3F,GAAc+G,EAAKC,EAAG5L,OAAQ2L,IAAM,CACrE,IAAIE,EAAKD,EAAGD,GACZ5L,EAAG+I,MAAMC,YADc8C,EAAG,GAAYA,EAAG,QAW7DjM,EAASC,UAAUwG,YAAc,SAAUyF,GACvC,IAAIjJ,EAEAkJ,EADAvD,EAAUtI,KAAKqC,cAEnB,GAAIuJ,GAAiBtD,EAAS,CAC1B3F,EAAK,GACL,IAAK,IAAImB,EAAK,EAAGgI,EAAYxD,EAASxE,EAAKgI,EAAUhM,OAAQgE,IAAM,CAC/D,IACIiI,EADSD,EAAUhI,GACHnB,GACL,oBAAXoJ,EACApJ,EAAGvC,KAAK,YAAa,0BAELQ,IAAXmL,GACLpJ,EAAGvC,KAAK2L,GAGhBF,EAAalJ,EAAGqJ,KAAK,UAGrBH,EAAa,GAEjB,IAAIxD,EAAWrI,KAAKG,UACpB,GAAIkI,EACA,IAAK,IAAIoB,EAAK,EAAGwC,EAAa5D,EAAUoB,EAAKwC,EAAWnM,OAAQ2J,IACnDwC,EAAWxC,GAEjBb,MAAMC,YAAY,cAAegD,IAOhDnM,EAASC,UAAUuM,cAAgB,WAE/BlM,KAAKkF,cAELlF,KAAKoG,mBAELpG,KAAKmM,kBAMTzM,EAASC,UAAUwM,eAAiB,WAChC,IAAInG,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGsI,EAAcpG,EAAUlC,EAAKsI,EAAYtM,OAAQgE,IAClDsI,EAAYtI,GAElBqI,iBAKdnM,KAAK0G,UAAU,GAAG,GAElB1G,KAAKmG,aAAY,IAMrBzG,EAASC,UAAU0M,aAAe,SAAUxF,GAExCA,EAAYyF,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAG3F,IACpC,IAAIb,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAG2I,EAAczG,EAAUlC,EAAK2I,EAAY3M,OAAQgE,IAClD2I,EAAY3I,GAElBuI,aAAaxF,GAI3B7G,KAAKkG,UAAUW,IAKnBnH,EAASC,UAAU+M,YAAc,SAAU3F,EAAgB4F,EAAkBtG,GACzE,IAAIvB,EAAQ9E,UACA,IAARqG,IAAkBA,GAAO,GACzBrG,KAAKkB,aAGLyL,EAAmB,EAAIA,GAE3B,IAAI9F,EAAYE,EAAiB,EAAI,EAEjCV,EAAM,EACNA,EAAMrG,KAAKc,WAAa,EAFjBwL,KAAKM,IAAID,EAAmB9F,GAIvB,MACZR,EAAM,GAEVrG,KAAKgF,SAAkB,GAANqB,EACjBrG,KAAK6M,aAAa9F,EAAgBF,EAAWR,EAAKrG,KAAKgF,UACnDhF,KAAKgF,WAKLhF,KAAKsG,UAAUD,EAAKU,GAGf/G,KAAK+E,YACN3F,EAAI,WACA0F,EAAM0B,YAAYK,OASlCnH,EAASC,UAAUkN,aAAe,SAAU9F,EAAgBF,EAAWR,EAAKyG,GACxE,IAAI9G,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGiJ,EAAc/G,EAAUlC,EAAKiJ,EAAYjN,OAAQgE,IAClDiJ,EAAYjJ,GAElB+I,aAAa9F,EAAgBF,EAAWR,EAAKyG,GAGtDA,GAWD9M,KAAK6F,WAAY,EACjB7F,KAAK8F,cAAe,EACpB9F,KAAK+F,SAAU,EAEf/F,KAAKmG,aAAY,GACjBnG,KAAK0G,UAAUL,GAAK,KAZpBrG,KAAKkG,UAAUW,GACf7G,KAAKmG,aAAY,GACjBnG,KAAK2G,kBACL3G,KAAK4G,WAAWG,KAexBrH,EAASC,UAAU6F,SAAW,SAAUkF,EAAU/J,GAY9C,OAXIA,GAAQA,EAAK+E,yBACb1F,KAAKgN,mBAAqBhN,KAAKiN,+BAA4BrM,GAE3DD,GAAQA,EAAK8E,iBACbzF,KAAKiN,0BAA4BjN,KAAKiN,2BAA6B,GACnEjN,KAAKiN,0BAA0B7M,KAAKsK,KAGpC1K,KAAKgN,mBAAqBhN,KAAKgN,oBAAsB,GACrDhN,KAAKgN,mBAAmB5M,KAAKsK,IAE1B1K,MAMXN,EAASC,UAAU4H,cAAgB,SAAUzB,EAAcoH,EAAuBC,GAC9E,IAAInH,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGsJ,EAAcpH,EAAUlC,EAAKsJ,EAAYtN,OAAQgE,IAClDsJ,EAAYtJ,GAClByD,cAAczB,EAAcoH,EAAuBC,IAG7DD,GAAyBlN,KAAKgF,UAAYmI,IAA+BnN,KAAKgF,WAC9EhF,KAAK4G,WAAWd,IAMxBpG,EAASC,UAAUiH,WAAa,SAAUd,GAGtC,GAFA9F,KAAK6F,WAAY,EACjB7F,KAAK8F,aAAeA,EAChB9F,KAAKgN,mBAEL,IAAK,IAAIlJ,EAAK,EAAG2F,EAAKzJ,KAAKgN,mBAAoBlJ,EAAK2F,EAAG3J,OAAQgE,KACvD4G,EAAWjB,EAAG3F,IACT9D,MAGjB,GAAIA,KAAKiN,0BAA2B,CAEhC,IAAK,IAAIpD,EAAK,EAAGE,EAAK/J,KAAKiN,0BAA2BpD,EAAKE,EAAGjK,OAAQ+J,KAC9Da,EAAWX,EAAGF,IACT7J,MAEbA,KAAKiN,0BAA0BnN,OAAS,IAMhDJ,EAASC,UAAU0N,QAAU,SAAUC,QACb,IAAlBA,IAA4BA,GAAgB,GAChD,IAAItH,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAGyJ,EAAcvH,EAAUlC,EAAKyJ,EAAYzN,OAAQgE,IAClDyJ,EAAYzJ,GAClBuJ,QAAQC,GAItB,OADAtN,KAAKkB,aAAeoM,EACbtN,MAKXN,EAASC,UAAU6N,QAAU,WACzBxN,KAAK4G,YAAW,GAChB5G,KAAK+E,YAAa,EAClB,IAAIiB,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAG2J,EAAczH,EAAUlC,EAAK2J,EAAY3N,OAAQgE,IAClD2J,EAAY3J,GAClB0J,UAGdxN,KAAKkF,cACDlF,KAAKG,YACLH,KAAKG,UAAUL,OAAS,GAExBE,KAAKkE,iBACLlE,KAAKkE,eAAepE,OAAS,GAE7BE,KAAKqE,kBACLrE,KAAKqE,gBAAgBvE,OAAS,GAElCE,KAAKO,YAASK,EACVZ,KAAKS,mBACLT,KAAKS,iBAAiBX,OAAS,GAE/BE,KAAKgN,qBACLhN,KAAKgN,mBAAmBlN,OAAS,GAEjCE,KAAKiN,4BACLjN,KAAKiN,0BAA0BnN,OAAS,IAMhDJ,EAASC,UAAU8H,SAAW,WAE1B,IAAIzB,EAAWhG,KAAKS,iBACpB,GAAIuF,EACA,IAAK,IAAIlC,EAAK,EAAG4J,EAAc1H,EAAUlC,EAAK4J,EAAY5N,OAAQgE,IAAM,CACpE,IACI6J,EADQD,EAAY5J,GACH2D,WACrB,GAAIkG,EACA,OAAOA,EAInB,OAAQ3N,KAAK4F,iBACT5F,KAAK+F,cACcnF,IAAnBZ,KAAKG,WACmB,EAAxBH,KAAKG,UAAUL,OACfE,KAAKG,UAAU,GAAK,MAErBT,GA1kCP,SAASA,IACLM,KAAK+F,SAAU,EACf/F,KAAK4F,iBAAkB,EACvB5F,KAAKgF,UAAW,EAChBhF,KAAKkB,YAAa,EAClBlB,KAAK+E,YAAa,EAClB/E,KAAKQ,aAAc,EACnBR,KAAK6F,WAAY,EACjB7F,KAAK8F,cAAe,EAokC5B,IAAI8H,EAAS,SAAUC,EAAkBC,EAAQnN,GAC7C,OAAIkN,EACOA,EAAiBnO,EAAUoO,EAAQnN,GAEvC2E,QAAQC,QAAQ,IAAI7F","file":"6.ce19c46278638387a953.js","sourcesContent":["var transitionEnd = function (el, callback) {\n    var unRegTrans;\n    var opts = { passive: true };\n    var unregister = function () {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    var onTransitionEnd = function (ev) {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n        el.addEventListener('transitionend', onTransitionEnd, opts);\n        unRegTrans = function () {\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\nvar CSS_VALUE_REGEX = /(^-?\\d*\\.?\\d*)(.*)/;\nvar DURATION_MIN = 32;\nvar TRANSITION_END_FALLBACK_PADDING_MS = 400;\nvar TRANSFORM_PROPS = {\n    'translateX': 1,\n    'translateY': 1,\n    'translateZ': 1,\n    'scale': 1,\n    'scaleX': 1,\n    'scaleY': 1,\n    'scaleZ': 1,\n    'rotate': 1,\n    'rotateX': 1,\n    'rotateY': 1,\n    'rotateZ': 1,\n    'skewX': 1,\n    'skewY': 1,\n    'perspective': 1\n};\nvar win = typeof window !== 'undefined' ? window : {};\nvar raf = win.requestAnimationFrame\n    ? win.requestAnimationFrame.bind(win)\n    : function (f) { return f(Date.now()); };\nvar Animator = /** @class */ (function () {\n    function Animator() {\n        this._hasDur = false;\n        this._hasTweenEffect = false;\n        this._isAsync = false;\n        this._isReverse = false;\n        this._destroyed = false;\n        this.hasChildren = false;\n        this.isPlaying = false;\n        this.hasCompleted = false;\n    }\n    Animator.prototype.addElement = function (el) {\n        if (el != null) {\n            if (el.length > 0) {\n                for (var i = 0; i < el.length; i++) {\n                    this._addEl(el[i]);\n                }\n            }\n            else {\n                this._addEl(el);\n            }\n        }\n        return this;\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._addEl = function (el) {\n        if (el.nodeType === 1) {\n            (this._elements = this._elements || []).push(el);\n        }\n    };\n    /**\n     * Add a child animation to this animation.\n     */\n    Animator.prototype.add = function (childAnimation) {\n        childAnimation.parent = this;\n        this.hasChildren = true;\n        (this._childAnimations = this._childAnimations || []).push(childAnimation);\n        return this;\n    };\n    /**\n     * Get the duration of this animation. If this animation does\n     * not have a duration, then it'll get the duration from its parent.\n     */\n    Animator.prototype.getDuration = function (opts) {\n        if (opts && opts.duration !== undefined) {\n            return opts.duration;\n        }\n        else if (this._duration !== undefined) {\n            return this._duration;\n        }\n        else if (this.parent) {\n            return this.parent.getDuration();\n        }\n        return 0;\n    };\n    /**\n     * Returns if the animation is a root one.\n     */\n    Animator.prototype.isRoot = function () {\n        return !this.parent;\n    };\n    /**\n     * Set the duration for this animation.\n     */\n    Animator.prototype.duration = function (milliseconds) {\n        this._duration = milliseconds;\n        return this;\n    };\n    /**\n     * Get the easing of this animation. If this animation does\n     * not have an easing, then it'll get the easing from its parent.\n     */\n    Animator.prototype.getEasing = function () {\n        if (this._isReverse && this._reversedEasingName !== undefined) {\n            return this._reversedEasingName;\n        }\n        return this._easingName !== undefined ? this._easingName : (this.parent && this.parent.getEasing()) || null;\n    };\n    /**\n     * Set the easing for this animation.\n     */\n    Animator.prototype.easing = function (name) {\n        this._easingName = name;\n        return this;\n    };\n    /**\n     * Set the easing for this reversed animation.\n     */\n    Animator.prototype.easingReverse = function (name) {\n        this._reversedEasingName = name;\n        return this;\n    };\n    /**\n     * Add the \"from\" value for a specific property.\n     */\n    Animator.prototype.from = function (prop, val) {\n        this._addProp('from', prop, val);\n        return this;\n    };\n    /**\n     * Add the \"to\" value for a specific property.\n     */\n    Animator.prototype.to = function (prop, val, clearProperyAfterTransition) {\n        if (clearProperyAfterTransition === void 0) { clearProperyAfterTransition = false; }\n        var fx = this._addProp('to', prop, val);\n        if (clearProperyAfterTransition) {\n            // if this effect is a transform then clear the transform effect\n            // otherwise just clear the actual property\n            this.afterClearStyles(fx.trans ? ['transform', '-webkit-transform'] : [prop]);\n        }\n        return this;\n    };\n    /**\n     * Shortcut to add both the \"from\" and \"to\" for the same property.\n     */\n    Animator.prototype.fromTo = function (prop, fromVal, toVal, clearProperyAfterTransition) {\n        return this.from(prop, fromVal).to(prop, toVal, clearProperyAfterTransition);\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._getProp = function (name) {\n        if (this._fxProperties) {\n            return this._fxProperties.find(function (prop) { return prop.effectName === name; });\n        }\n        return undefined;\n    };\n    Animator.prototype._addProp = function (state, prop, val) {\n        var fxProp = this._getProp(prop);\n        if (!fxProp) {\n            // first time we've see this EffectProperty\n            var shouldTrans = (TRANSFORM_PROPS[prop] === 1);\n            fxProp = {\n                effectName: prop,\n                trans: shouldTrans,\n                // add the will-change property for transforms or opacity\n                wc: (shouldTrans ? 'transform' : prop)\n            };\n            (this._fxProperties = this._fxProperties || []).push(fxProp);\n        }\n        // add from/to EffectState to the EffectProperty\n        var fxState = {\n            val: val,\n            num: 0,\n            effectUnit: '',\n        };\n        fxProp[state] = fxState;\n        if (typeof val === 'string' && val.indexOf(' ') < 0) {\n            var r = val.match(CSS_VALUE_REGEX);\n            if (r) {\n                var num = parseFloat(r[1]);\n                if (!isNaN(num)) {\n                    fxState.num = num;\n                }\n                fxState.effectUnit = (r[0] !== r[2] ? r[2] : '');\n            }\n        }\n        else if (typeof val === 'number') {\n            fxState.num = val;\n        }\n        return fxProp;\n    };\n    /**\n     * Add CSS class to this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddClass = function (className) {\n        (this._beforeAddClasses = this._beforeAddClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Remove CSS class from this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeRemoveClass = function (className) {\n        (this._beforeRemoveClasses = this._beforeRemoveClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Set CSS inline styles to this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeStyles = function (styles) {\n        this._beforeStyles = styles;\n        return this;\n    };\n    /**\n     * Clear CSS inline styles from this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeClearStyles = function (propertyNames) {\n        this._beforeStyles = this._beforeStyles || {};\n        for (var _i = 0, propertyNames_1 = propertyNames; _i < propertyNames_1.length; _i++) {\n            var prop = propertyNames_1[_i];\n            this._beforeStyles[prop] = '';\n        }\n        return this;\n    };\n    /**\n     * Add a function which contains DOM reads, which will run\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddRead = function (domReadFn) {\n        (this._readCallbacks = this._readCallbacks || []).push(domReadFn);\n        return this;\n    };\n    /**\n     * Add a function which contains DOM writes, which will run\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddWrite = function (domWriteFn) {\n        (this._writeCallbacks = this._writeCallbacks || []).push(domWriteFn);\n        return this;\n    };\n    /**\n     * Add CSS class to this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterAddClass = function (className) {\n        (this._afterAddClasses = this._afterAddClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Remove CSS class from this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterRemoveClass = function (className) {\n        (this._afterRemoveClasses = this._afterRemoveClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Set CSS inline styles to this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterStyles = function (styles) {\n        this._afterStyles = styles;\n        return this;\n    };\n    /**\n     * Clear CSS inline styles from this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterClearStyles = function (propertyNames) {\n        this._afterStyles = this._afterStyles || {};\n        for (var _i = 0, propertyNames_2 = propertyNames; _i < propertyNames_2.length; _i++) {\n            var prop = propertyNames_2[_i];\n            this._afterStyles[prop] = '';\n        }\n        return this;\n    };\n    /**\n     * Play the animation.\n     */\n    Animator.prototype.play = function (opts) {\n        var _this = this;\n        // If the animation was already invalidated (it did finish), do nothing\n        if (this._destroyed) {\n            return;\n        }\n        // this is the top level animation and is in full control\n        // of when the async play() should actually kick off\n        // if there is no duration then it'll set the TO property immediately\n        // if there is a duration, then it'll stage all animations at the\n        // FROM property and transition duration, wait a few frames, then\n        // kick off the animation by setting the TO property for each animation\n        this._isAsync = this._hasDuration(opts);\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        // recursively kicks off the correct progress step for each child animation\n        // ******** DOM WRITE ****************\n        this._playInit(opts);\n        // doubling up RAFs since this animation was probably triggered\n        // from an input event, and just having one RAF would have this code\n        // run within the same frame as the triggering input event, and the\n        // input event probably already did way too much work for one frame\n        raf(function () {\n            raf(function () {\n                _this._playDomInspect(opts);\n            });\n        });\n    };\n    Animator.prototype.playAsync = function (opts) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.onFinish(resolve, { oneTimeCallback: true, clearExistingCallbacks: true });\n            _this.play(opts);\n            return _this;\n        });\n    };\n    Animator.prototype.playSync = function () {\n        // If the animation was already invalidated (it did finish), do nothing\n        if (!this._destroyed) {\n            var opts = { duration: 0 };\n            this._isAsync = false;\n            this._clearAsync();\n            this._playInit(opts);\n            this._playDomInspect(opts);\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playInit = function (opts) {\n        // always default that an animation does not tween\n        // a tween requires that an Animation class has an element\n        // and that it has at least one FROM/TO effect\n        // and that the FROM/TO effect can tween numeric values\n        this._hasTweenEffect = false;\n        this.isPlaying = true;\n        this.hasCompleted = false;\n        this._hasDur = (this.getDuration(opts) > DURATION_MIN);\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var child = children_1[_i];\n                // ******** DOM WRITE ****************\n                child._playInit(opts);\n            }\n        }\n        if (this._hasDur) {\n            // if there is a duration then we want to start at step 0\n            // ******** DOM WRITE ****************\n            this._progress(0);\n            // add the will-change properties\n            // ******** DOM WRITE ****************\n            this._willChange(true);\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     * ROOT ANIMATION\n     */\n    Animator.prototype._playDomInspect = function (opts) {\n        var _this = this;\n        // fire off all the \"before\" function that have DOM READS in them\n        // elements will be in the DOM, however visibily hidden\n        // so we can read their dimensions if need be\n        // ******** DOM READ ****************\n        // ******** DOM WRITE ****************\n        this._beforeAnimation();\n        // for the root animation only\n        // set the async TRANSITION END event\n        // and run onFinishes when the transition ends\n        var dur = this.getDuration(opts);\n        if (this._isAsync) {\n            this._asyncEnd(dur, true);\n        }\n        // ******** DOM WRITE ****************\n        this._playProgress(opts);\n        if (this._isAsync && !this._destroyed) {\n            // this animation has a duration so we need another RAF\n            // for the CSS TRANSITION properties to kick in\n            raf(function () {\n                _this._playToStep(1);\n            });\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playProgress = function (opts) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\n                var child = children_2[_i];\n                // ******** DOM WRITE ****************\n                child._playProgress(opts);\n            }\n        }\n        if (this._hasDur) {\n            // set the CSS TRANSITION duration/easing\n            // ******** DOM WRITE ****************\n            this._setTrans(this.getDuration(opts), false);\n        }\n        else {\n            // this animation does not have a duration, so it should not animate\n            // just go straight to the TO properties and call it done\n            // ******** DOM WRITE ****************\n            this._progress(1);\n            // since there was no animation, immediately run the after\n            // ******** DOM WRITE ****************\n            this._setAfterStyles();\n            // this animation has no duration, so it has finished\n            // other animations could still be running\n            this._didFinish(true);\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playToStep = function (stepValue) {\n        if (!this._destroyed) {\n            var children = this._childAnimations;\n            if (children) {\n                for (var _i = 0, children_3 = children; _i < children_3.length; _i++) {\n                    var child = children_3[_i];\n                    // ******** DOM WRITE ****************\n                    child._playToStep(stepValue);\n                }\n            }\n            if (this._hasDur) {\n                // browser had some time to render everything in place\n                // and the transition duration/easing is set\n                // now set the TO properties which will trigger the transition to begin\n                // ******** DOM WRITE ****************\n                this._progress(stepValue);\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     * ROOT ANIMATION\n     */\n    Animator.prototype._asyncEnd = function (dur, shouldComplete) {\n        var self = this;\n        var onTransitionEnd = function () {\n            // congrats! a successful transition completed!\n            // ensure transition end events and timeouts have been cleared\n            self._clearAsync();\n            // ******** DOM WRITE ****************\n            self._playEnd();\n            // transition finished\n            self._didFinishAll(shouldComplete, true, false);\n        };\n        var onTransitionFallback = function () {\n            // oh noz! the transition end event didn't fire in time!\n            // instead the fallback timer when first\n            // if all goes well this fallback should never fire\n            // clear the other async end events from firing\n            self._timerId = undefined;\n            self._clearAsync();\n            // set the after styles\n            // ******** DOM WRITE ****************\n            self._playEnd(shouldComplete ? 1 : 0);\n            // transition finished\n            self._didFinishAll(shouldComplete, true, false);\n        };\n        // set the TRANSITION END event on one of the transition elements\n        self._unregisterTrnsEnd = transitionEnd(self._transEl(), onTransitionEnd);\n        // set a fallback timeout if the transition end event never fires, or is too slow\n        // transition end fallback: (animation duration + XXms)\n        self._timerId = setTimeout(onTransitionFallback, (dur + TRANSITION_END_FALLBACK_PADDING_MS));\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playEnd = function (stepValue) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_4 = children; _i < children_4.length; _i++) {\n                var child = children_4[_i];\n                // ******** DOM WRITE ****************\n                child._playEnd(stepValue);\n            }\n        }\n        if (this._hasDur) {\n            if (stepValue !== undefined) {\n                // too late to have a smooth animation, just finish it\n                // ******** DOM WRITE ****************\n                this._setTrans(0, true);\n                // ensure the ending progress step gets rendered\n                // ******** DOM WRITE ****************\n                this._progress(stepValue);\n            }\n            // set the after styles\n            // ******** DOM WRITE ****************\n            this._setAfterStyles();\n            // remove the will-change properties\n            // ******** DOM WRITE ****************\n            this._willChange(false);\n        }\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._hasDuration = function (opts) {\n        if (this.getDuration(opts) > DURATION_MIN) {\n            return true;\n        }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_5 = children; _i < children_5.length; _i++) {\n                var child = children_5[_i];\n                if (child._hasDuration(opts)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._hasDomReads = function () {\n        if (this._readCallbacks && this._readCallbacks.length > 0) {\n            return true;\n        }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_6 = children; _i < children_6.length; _i++) {\n                var child = children_6[_i];\n                if (child._hasDomReads()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Immediately stop at the end of the animation.\n     */\n    Animator.prototype.stop = function (stepValue) {\n        if (stepValue === void 0) { stepValue = 1; }\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        this._hasDur = true;\n        this._playEnd(stepValue);\n    };\n    /**\n     * NO DOM\n     * NO RECURSION\n     */\n    Animator.prototype._clearAsync = function () {\n        if (this._unregisterTrnsEnd) {\n            this._unregisterTrnsEnd();\n        }\n        if (this._timerId) {\n            clearTimeout(this._timerId);\n        }\n        this._timerId = this._unregisterTrnsEnd = undefined;\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._progress = function (stepValue) {\n        // bread 'n butter\n        var val;\n        var elements = this._elements;\n        var effects = this._fxProperties;\n        if (!elements || elements.length === 0 || !effects || this._destroyed) {\n            return;\n        }\n        // flip the number if we're going in reverse\n        if (this._isReverse) {\n            stepValue = 1 - stepValue;\n        }\n        var i = 0;\n        var j = 0;\n        var finalTransform = '';\n        var fx;\n        for (i = 0; i < effects.length; i++) {\n            fx = effects[i];\n            if (fx.from && fx.to) {\n                var fromNum = fx.from.num;\n                var toNum = fx.to.num;\n                var tweenEffect = (fromNum !== toNum);\n                if (tweenEffect) {\n                    this._hasTweenEffect = true;\n                }\n                if (stepValue === 0) {\n                    // FROM\n                    val = fx.from.val;\n                }\n                else if (stepValue === 1) {\n                    // TO\n                    val = fx.to.val;\n                }\n                else if (tweenEffect) {\n                    // EVERYTHING IN BETWEEN\n                    var valNum = (((toNum - fromNum) * stepValue) + fromNum);\n                    var unit = fx.to.effectUnit;\n                    val = valNum + unit;\n                }\n                if (val !== null) {\n                    var prop = fx.effectName;\n                    if (fx.trans) {\n                        finalTransform += prop + '(' + val + ') ';\n                    }\n                    else {\n                        for (j = 0; j < elements.length; j++) {\n                            // ******** DOM WRITE ****************\n                            elements[j].style.setProperty(prop, val);\n                        }\n                    }\n                }\n            }\n        }\n        // place all transforms on the same property\n        if (finalTransform.length > 0) {\n            if (!this._isReverse && stepValue !== 1 || this._isReverse && stepValue !== 0) {\n                finalTransform += 'translateZ(0px)';\n            }\n            for (i = 0; i < elements.length; i++) {\n                // ******** DOM WRITE ****************\n                elements[i].style.setProperty('transform', finalTransform);\n                elements[i].style.setProperty('-webkit-transform', finalTransform);\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._setTrans = function (dur, forcedLinearEasing) {\n        // Transition is not enabled if there are not effects\n        var elements = this._elements;\n        if (!elements || elements.length === 0 || !this._fxProperties) {\n            return;\n        }\n        // set the TRANSITION properties inline on the element\n        var easing = (forcedLinearEasing ? 'linear' : this.getEasing());\n        var durString = dur + 'ms';\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var style = elements_1[_i].style;\n            if (dur > 0) {\n                // ******** DOM WRITE ****************\n                style.transitionDuration = durString;\n                // each animation can have a different easing\n                if (easing !== null) {\n                    // ******** DOM WRITE ****************\n                    style.transitionTimingFunction = easing;\n                }\n            }\n            else {\n                style.transitionDuration = '0';\n            }\n        }\n    };\n    /**\n     * DOM READ\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._beforeAnimation = function () {\n        // fire off all the \"before\" function that have DOM READS in them\n        // elements will be in the DOM, however visibily hidden\n        // so we can read their dimensions if need be\n        // ******** DOM READ ****************\n        this._fireBeforeReadFunc();\n        // ******** DOM READS ABOVE / DOM WRITES BELOW ****************\n        // fire off all the \"before\" function that have DOM WRITES in them\n        // ******** DOM WRITE ****************\n        this._fireBeforeWriteFunc();\n        // stage all of the before css classes and inline styles\n        // ******** DOM WRITE ****************\n        this._setBeforeStyles();\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._setBeforeStyles = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_7 = children; _i < children_7.length; _i++) {\n                var child = children_7[_i];\n                child._setBeforeStyles();\n            }\n        }\n        var elements = this._elements;\n        // before the animations have started\n        // only set before styles if animation is not reversed\n        if (!elements || elements.length === 0 || this._isReverse) {\n            return;\n        }\n        var addClasses = this._beforeAddClasses;\n        var removeClasses = this._beforeRemoveClasses;\n        for (var _a = 0, elements_2 = elements; _a < elements_2.length; _a++) {\n            var el = elements_2[_a];\n            var elementClassList = el.classList;\n            // css classes to add before the animation\n            if (addClasses) {\n                for (var _b = 0, addClasses_1 = addClasses; _b < addClasses_1.length; _b++) {\n                    var c = addClasses_1[_b];\n                    // ******** DOM WRITE ****************\n                    elementClassList.add(c);\n                }\n            }\n            // css classes to remove before the animation\n            if (removeClasses) {\n                for (var _c = 0, removeClasses_1 = removeClasses; _c < removeClasses_1.length; _c++) {\n                    var c = removeClasses_1[_c];\n                    // ******** DOM WRITE ****************\n                    elementClassList.remove(c);\n                }\n            }\n            // inline styles to add before the animation\n            if (this._beforeStyles) {\n                for (var _d = 0, _e = Object.entries(this._beforeStyles); _d < _e.length; _d++) {\n                    var _f = _e[_d], key = _f[0], value = _f[1];\n                    // ******** DOM WRITE ****************\n                    el.style.setProperty(key, value);\n                }\n            }\n        }\n    };\n    /**\n     * DOM READ\n     * RECURSION\n     */\n    Animator.prototype._fireBeforeReadFunc = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_8 = children; _i < children_8.length; _i++) {\n                var child = children_8[_i];\n                // ******** DOM READ ****************\n                child._fireBeforeReadFunc();\n            }\n        }\n        var readFunctions = this._readCallbacks;\n        if (readFunctions) {\n            for (var _a = 0, readFunctions_1 = readFunctions; _a < readFunctions_1.length; _a++) {\n                var callback = readFunctions_1[_a];\n                // ******** DOM READ ****************\n                callback();\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._fireBeforeWriteFunc = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_9 = children; _i < children_9.length; _i++) {\n                var child = children_9[_i];\n                // ******** DOM WRITE ****************\n                child._fireBeforeWriteFunc();\n            }\n        }\n        var writeFunctions = this._writeCallbacks;\n        if (writeFunctions) {\n            for (var _a = 0, writeFunctions_1 = writeFunctions; _a < writeFunctions_1.length; _a++) {\n                var callback = writeFunctions_1[_a];\n                // ******** DOM WRITE ****************\n                callback();\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     */\n    Animator.prototype._setAfterStyles = function () {\n        var elements = this._elements;\n        if (!elements) {\n            return;\n        }\n        for (var _i = 0, elements_3 = elements; _i < elements_3.length; _i++) {\n            var el = elements_3[_i];\n            var elementClassList = el.classList;\n            // remove the transition duration/easing\n            // ******** DOM WRITE ****************\n            el.style.transitionDuration = el.style.transitionTimingFunction = '';\n            if (this._isReverse) {\n                // finished in reverse direction\n                // css classes that were added before the animation should be removed\n                var beforeAddClasses = this._beforeAddClasses;\n                if (beforeAddClasses) {\n                    for (var _a = 0, beforeAddClasses_1 = beforeAddClasses; _a < beforeAddClasses_1.length; _a++) {\n                        var c = beforeAddClasses_1[_a];\n                        elementClassList.remove(c);\n                    }\n                }\n                // css classes that were removed before the animation should be added\n                var beforeRemoveClasses = this._beforeRemoveClasses;\n                if (beforeRemoveClasses) {\n                    for (var _b = 0, beforeRemoveClasses_1 = beforeRemoveClasses; _b < beforeRemoveClasses_1.length; _b++) {\n                        var c = beforeRemoveClasses_1[_b];\n                        elementClassList.add(c);\n                    }\n                }\n                // inline styles that were added before the animation should be removed\n                var beforeStyles = this._beforeStyles;\n                if (beforeStyles) {\n                    for (var _c = 0, _d = Object.keys(beforeStyles); _c < _d.length; _c++) {\n                        var propName = _d[_c];\n                        // ******** DOM WRITE ****************\n                        el.style.removeProperty(propName);\n                    }\n                }\n            }\n            else {\n                // finished in forward direction\n                // css classes to add after the animation\n                var afterAddClasses = this._afterAddClasses;\n                if (afterAddClasses) {\n                    for (var _e = 0, afterAddClasses_1 = afterAddClasses; _e < afterAddClasses_1.length; _e++) {\n                        var c = afterAddClasses_1[_e];\n                        // ******** DOM WRITE ****************\n                        elementClassList.add(c);\n                    }\n                }\n                // css classes to remove after the animation\n                var afterRemoveClasses = this._afterRemoveClasses;\n                if (afterRemoveClasses) {\n                    for (var _f = 0, afterRemoveClasses_1 = afterRemoveClasses; _f < afterRemoveClasses_1.length; _f++) {\n                        var c = afterRemoveClasses_1[_f];\n                        // ******** DOM WRITE ****************\n                        elementClassList.remove(c);\n                    }\n                }\n                // inline styles to add after the animation\n                var afterStyles = this._afterStyles;\n                if (afterStyles) {\n                    for (var _g = 0, _h = Object.entries(afterStyles); _g < _h.length; _g++) {\n                        var _j = _h[_g], key = _j[0], value = _j[1];\n                        el.style.setProperty(key, value);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._willChange = function (addWillChange) {\n        var wc;\n        var effects = this._fxProperties;\n        var willChange;\n        if (addWillChange && effects) {\n            wc = [];\n            for (var _i = 0, effects_1 = effects; _i < effects_1.length; _i++) {\n                var effect = effects_1[_i];\n                var propWC = effect.wc;\n                if (propWC === 'webkitTransform') {\n                    wc.push('transform', '-webkit-transform');\n                }\n                else if (propWC !== undefined) {\n                    wc.push(propWC);\n                }\n            }\n            willChange = wc.join(',');\n        }\n        else {\n            willChange = '';\n        }\n        var elements = this._elements;\n        if (elements) {\n            for (var _a = 0, elements_4 = elements; _a < elements_4.length; _a++) {\n                var el = elements_4[_a];\n                // ******** DOM WRITE ****************\n                el.style.setProperty('will-change', willChange);\n            }\n        }\n    };\n    /**\n     * Start the animation with a user controlled progress.\n     */\n    Animator.prototype.progressStart = function () {\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        // ******** DOM READ/WRITE ****************\n        this._beforeAnimation();\n        // ******** DOM WRITE ****************\n        this._progressStart();\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._progressStart = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_10 = children; _i < children_10.length; _i++) {\n                var child = children_10[_i];\n                // ******** DOM WRITE ****************\n                child._progressStart();\n            }\n        }\n        // force no duration, linear easing\n        // ******** DOM WRITE ****************\n        this._setTrans(0, true);\n        // ******** DOM WRITE ****************\n        this._willChange(true);\n    };\n    /**\n     * Set the progress step for this animation.\n     * progressStep() is not debounced, so it should not be called faster than 60FPS.\n     */\n    Animator.prototype.progressStep = function (stepValue) {\n        // only update if the last update was more than 16ms ago\n        stepValue = Math.min(1, Math.max(0, stepValue));\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_11 = children; _i < children_11.length; _i++) {\n                var child = children_11[_i];\n                // ******** DOM WRITE ****************\n                child.progressStep(stepValue);\n            }\n        }\n        // ******** DOM WRITE ****************\n        this._progress(stepValue);\n    };\n    /**\n     * End the progress animation.\n     */\n    Animator.prototype.progressEnd = function (shouldComplete, currentStepValue, dur) {\n        var _this = this;\n        if (dur === void 0) { dur = -1; }\n        if (this._isReverse) {\n            // if the animation is going in reverse then\n            // flip the step value: 0 becomes 1, 1 becomes 0\n            currentStepValue = 1 - currentStepValue;\n        }\n        var stepValue = shouldComplete ? 1 : 0;\n        var diff = Math.abs(currentStepValue - stepValue);\n        if (dur < 0) {\n            dur = this._duration || 0;\n        }\n        else if (diff < 0.05) {\n            dur = 0;\n        }\n        this._isAsync = (dur > 30);\n        this._progressEnd(shouldComplete, stepValue, dur, this._isAsync);\n        if (this._isAsync) {\n            // for the root animation only\n            // set the async TRANSITION END event\n            // and run onFinishes when the transition ends\n            // ******** DOM WRITE ****************\n            this._asyncEnd(dur, shouldComplete);\n            // this animation has a duration so we need another RAF\n            // for the CSS TRANSITION properties to kick in\n            if (!this._destroyed) {\n                raf(function () {\n                    _this._playToStep(stepValue);\n                });\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._progressEnd = function (shouldComplete, stepValue, dur, isAsync) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_12 = children; _i < children_12.length; _i++) {\n                var child = children_12[_i];\n                // ******** DOM WRITE ****************\n                child._progressEnd(shouldComplete, stepValue, dur, isAsync);\n            }\n        }\n        if (!isAsync) {\n            // stop immediately\n            // set all the animations to their final position\n            // ******** DOM WRITE ****************\n            this._progress(stepValue);\n            this._willChange(false);\n            this._setAfterStyles();\n            this._didFinish(shouldComplete);\n        }\n        else {\n            // animate it back to it's ending position\n            this.isPlaying = true;\n            this.hasCompleted = false;\n            this._hasDur = true;\n            // ******** DOM WRITE ****************\n            this._willChange(true);\n            this._setTrans(dur, false);\n        }\n    };\n    /**\n     * Add a callback to fire when the animation has finished.\n     */\n    Animator.prototype.onFinish = function (callback, opts) {\n        if (opts && opts.clearExistingCallbacks) {\n            this._onFinishCallbacks = this._onFinishOneTimeCallbacks = undefined;\n        }\n        if (opts && opts.oneTimeCallback) {\n            this._onFinishOneTimeCallbacks = this._onFinishOneTimeCallbacks || [];\n            this._onFinishOneTimeCallbacks.push(callback);\n        }\n        else {\n            this._onFinishCallbacks = this._onFinishCallbacks || [];\n            this._onFinishCallbacks.push(callback);\n        }\n        return this;\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._didFinishAll = function (hasCompleted, finishAsyncAnimations, finishNoDurationAnimations) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_13 = children; _i < children_13.length; _i++) {\n                var child = children_13[_i];\n                child._didFinishAll(hasCompleted, finishAsyncAnimations, finishNoDurationAnimations);\n            }\n        }\n        if (finishAsyncAnimations && this._isAsync || finishNoDurationAnimations && !this._isAsync) {\n            this._didFinish(hasCompleted);\n        }\n    };\n    /**\n     * NO RECURSION\n     */\n    Animator.prototype._didFinish = function (hasCompleted) {\n        this.isPlaying = false;\n        this.hasCompleted = hasCompleted;\n        if (this._onFinishCallbacks) {\n            // run all finish callbacks\n            for (var _i = 0, _a = this._onFinishCallbacks; _i < _a.length; _i++) {\n                var callback = _a[_i];\n                callback(this);\n            }\n        }\n        if (this._onFinishOneTimeCallbacks) {\n            // run all \"onetime\" finish callbacks\n            for (var _b = 0, _c = this._onFinishOneTimeCallbacks; _b < _c.length; _b++) {\n                var callback = _c[_b];\n                callback(this);\n            }\n            this._onFinishOneTimeCallbacks.length = 0;\n        }\n    };\n    /**\n     * Reverse the animation.\n     */\n    Animator.prototype.reverse = function (shouldReverse) {\n        if (shouldReverse === void 0) { shouldReverse = true; }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_14 = children; _i < children_14.length; _i++) {\n                var child = children_14[_i];\n                child.reverse(shouldReverse);\n            }\n        }\n        this._isReverse = !!shouldReverse;\n        return this;\n    };\n    /**\n     * Recursively destroy this animation and all child animations.\n     */\n    Animator.prototype.destroy = function () {\n        this._didFinish(false);\n        this._destroyed = true;\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_15 = children; _i < children_15.length; _i++) {\n                var child = children_15[_i];\n                child.destroy();\n            }\n        }\n        this._clearAsync();\n        if (this._elements) {\n            this._elements.length = 0;\n        }\n        if (this._readCallbacks) {\n            this._readCallbacks.length = 0;\n        }\n        if (this._writeCallbacks) {\n            this._writeCallbacks.length = 0;\n        }\n        this.parent = undefined;\n        if (this._childAnimations) {\n            this._childAnimations.length = 0;\n        }\n        if (this._onFinishCallbacks) {\n            this._onFinishCallbacks.length = 0;\n        }\n        if (this._onFinishOneTimeCallbacks) {\n            this._onFinishOneTimeCallbacks.length = 0;\n        }\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._transEl = function () {\n        // get the lowest level element that has an Animator\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_16 = children; _i < children_16.length; _i++) {\n                var child = children_16[_i];\n                var targetEl = child._transEl();\n                if (targetEl) {\n                    return targetEl;\n                }\n            }\n        }\n        return (this._hasTweenEffect &&\n            this._hasDur &&\n            this._elements !== undefined &&\n            this._elements.length > 0 ?\n            this._elements[0] : null);\n    };\n    return Animator;\n}());\nvar create = function (animationBuilder, baseEl, opts) {\n    if (animationBuilder) {\n        return animationBuilder(Animator, baseEl, opts);\n    }\n    return Promise.resolve(new Animator());\n};\nexport { create };\n"],"sourceRoot":""}